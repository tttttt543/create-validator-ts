// @ts-nocheck
// eslint-disable
// This file is generated by create-ts-validator
import Ajv from "ajv";
import * as apiTypes from "./api-types";

const SCHEMA = {
    $schema: "http://json-schema.org/draft-07/schema#",
    definitions: {
        GetAPIRequestQuery: {
            type: "object",
            properties: {
                id: {
                    type: "string"
                }
            },
            required: ["id"],
            additionalProperties: false
        },
        GetAPIResponseBody: {
            type: "object",
            properties: {
                ok: {
                    type: "boolean"
                }
            },
            required: ["ok"],
            additionalProperties: false
        }
    }
};
const ajv = new Ajv({ removeAdditional: true }).addSchema(SCHEMA, "SCHEMA");
export function validateGetAPIRequestQuery(payload: unknown): apiTypes.GetAPIRequestQuery {
    if (!isGetAPIRequestQuery(payload)) {
        const error = new Error("invalid payload: GetAPIRequestQuery");
        error.name = "ValidatorError";
        throw error;
    }
    return payload;
}

export function isGetAPIRequestQuery(payload: unknown): payload is apiTypes.GetAPIRequestQuery {
    /** Schema is defined in {@link SCHEMA.definitions.GetAPIRequestQuery } **/
    const ajvValidate = ajv.compile({ $ref: "SCHEMA#/definitions/GetAPIRequestQuery" });
    return ajvValidate(payload);
}

export function validateGetAPIResponseBody(payload: unknown): apiTypes.GetAPIResponseBody {
    if (!isGetAPIResponseBody(payload)) {
        const error = new Error("invalid payload: GetAPIResponseBody");
        error.name = "ValidatorError";
        throw error;
    }
    return payload;
}

export function isGetAPIResponseBody(payload: unknown): payload is apiTypes.GetAPIResponseBody {
    /** Schema is defined in {@link SCHEMA.definitions.GetAPIResponseBody } **/
    const ajvValidate = ajv.compile({ $ref: "SCHEMA#/definitions/GetAPIResponseBody" });
    return ajvValidate(payload);
}
